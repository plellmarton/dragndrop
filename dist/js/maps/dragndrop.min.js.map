{"version":3,"sources":["dragndrop.js"],"names":["DragNDrop","Container","options","this","Repository","DropZone","data","init","prototype","update","querySelectorAll","events","renderItem","index","template","variables","{{index}}","{{img.id}}","id","{{img.src}}","url","{{img.name}}","name","replace","matched","output","render","innerHTML","addEventListener","e","item","target","parseInt","getAttribute","console","log","bind","dropzone","preventDefault","{{repository.items}}","repository","map","toString","{{dropzone.items}}","undefined"],"mappings":"AAAA,SAASA,UAAUC,EAAWC,GAC5BC,KAAKF,UACLE,KAAKC,WACLD,KAAKE,SACLF,KAAKG,KACLH,KAAKI,KAAKN,EAAWC,GAGvBF,UAAUQ,UAAY,CACpBD,KAAM,SAAUN,EAAWC,GACzBC,KAAKF,UAAYA,EACjBE,KAAKG,KAAOJ,EACZC,KAAKM,SACLN,KAAKC,WAAaD,KAAKF,UAAUS,iBAAiB,2BAA2B,GAC7EP,KAAKE,SAAWF,KAAKF,UAAUS,iBAAiB,yBAAyB,GACzEP,KAAKQ,UAGPC,WAAY,SAAUN,EAAMO,GAC1B,IAAIC,EAAW,uPAKXC,EAAY,CACdC,YAAaH,EACbI,aAAcX,EAAKY,GACnBC,cAAeb,EAAKc,IACpBC,eAAgBf,EAAKgB,MAOvB,OAJAR,EAAWA,EAASS,QAAQ,kDAAmD,SAAUC,GACvF,OAAOT,EAAUS,MAMrBf,OAAQ,WACN,IAAIgB,EAAStB,KAAKuB,SAClBvB,KAAKF,UAAU0B,UAAYF,GAG7Bd,OAAQ,WACMR,KAAKF,UAAUS,iBAAiB,qBAE5CP,KAAKF,UAAU2B,iBAAiB,YAAa,SAAUC,GACrD,IAAIC,EAAOD,EAAEE,OACGC,SAASF,EAAKG,aAAa,eAC3CC,QAAQC,IAAI,eAAgBN,IAC5BO,KAAKjC,OAEPA,KAAKF,UAAU2B,iBAAiB,OAAQ,SAAUC,GAChD,IAAIQ,EAAWR,EAAEE,OACjBG,QAAQC,IAAI,UAAWE,IACvBD,KAAKjC,OAEPA,KAAKF,UAAU2B,iBAAiB,WAAY,SAAUC,GACpD,IAAIE,EAASF,EAAEE,OAAOE,aAAa,YACrB,aAAXF,EACDF,EAAES,iBACkB,eAAXP,GACTF,EAAES,kBAEJF,KAAKjC,QAGTuB,OAAQ,WACN,IAAIZ,EAAW,mKAGXC,EAAY,CACdwB,uBAAwBpC,KAAKG,KAAKkC,WAAWC,IAAI,SAAUX,EAAMjB,GAC/D,OAAOV,KAAKS,WAAWkB,EAAMjB,IAC7BuB,KAAKjC,OAAOuC,WAAWnB,QAAQ,MAAO,IACxCoB,0BAA6CC,IAAvBzC,KAAKG,KAAK+B,SAAyBlC,KAAKG,KAAK+B,SAASI,IAAI,SAAUX,EAAMjB,GAC9F,OAAOV,KAAKS,WAAWkB,EAAMjB,IAC7BuB,KAAKjC,OAAOuC,WAAWnB,QAAQ,MAAO,IAAM,IAOhD,OAJAT,EAAWA,EAASS,QAAQ,4CAA6C,SAAUC,GACjF,OAAOT,EAAUS","file":"../dragndrop.min.js","sourcesContent":["function DragNDrop(Container, options) {\n  this.Container\n  this.Repository\n  this.DropZone\n  this.data\n  this.init(Container, options)\n}\n\nDragNDrop.prototype = {\n  init: function (Container, options) {\n    this.Container = Container\n    this.data = options\n    this.update()\n    this.Repository = this.Container.querySelectorAll('[data-ref=\"repository\"]')[0]\n    this.DropZone = this.Container.querySelectorAll('[data-ref=\"dropzone\"]')[0]\n    this.events()\n  },\n\n  renderItem: function (data, index) {\n    var template = '<div class=\"dragndrop__item\" draggable=\"true\" data-ref=\"item\" data-id=\"{{img.id}}\" data-index=\"{{index}}\">' +\n      '<img src=\"{{img.src}}\" alt=\"{{img.name}}\" draggable=\"false\">' +\n      '<span class=\"dragndrop__item-name\" draggable=\"false\">{{img.name}}</span>' +\n      '</div>'\n\n    var variables = {\n      '{{index}}': index,\n      '{{img.id}}': data.id,\n      '{{img.src}}': data.url,\n      '{{img.name}}': data.name\n    }\n\n    template = template.replace(/{{img.src}}|{{img.name}}|{{img.id}}|{{index}}/gi, function (matched) {\n      return variables[matched]\n    })\n\n    return template\n  },\n\n  update: function () {\n    var output = this.render()\n    this.Container.innerHTML = output\n  },\n\n  events: function () {\n    var items = this.Container.querySelectorAll('[data-ref=\"item\"]')\n\n    this.Container.addEventListener('dragstart', function (e) {\n      var item = e.target\n      var dataIndex = parseInt(item.getAttribute('data-index'))\n      console.log('Drag started', e)\n    }.bind(this))\n\n    this.Container.addEventListener('drop', function (e) {\n      var dropzone = e.target\n      console.log('Dropped', dropzone)\n    }.bind(this))\n\n    this.Container.addEventListener('dragover', function (e) {\n      var target = e.target.getAttribute('data-ref')\n      if(target === 'dropzone') {\n        e.preventDefault()\n      } else if (target === 'repository') {\n        e.preventDefault()\n      }\n    }.bind(this))\n  },\n\n  render: function () {\n    var template = '<div class=\"dragndrop__repository\" data-ref=\"repository\">{{repository.items}}</div>' +\n      '<div class=\"dragndrop__dropzone\" data-ref=\"dropzone\">{{dropzone.items}}</div>'\n\n    var variables = {\n      '{{repository.items}}': this.data.repository.map(function (item, index) {\n        return this.renderItem(item, index)\n      }.bind(this)).toString().replace(/,/gi, ''),\n      '{{dropzone.items}}': this.data.dropzone !== undefined ? this.data.dropzone.map(function (item, index) {\n        return this.renderItem(item, index)\n      }.bind(this)).toString().replace(/,/gi, '') : ''\n    }\n\n    template = template.replace(/{{repository.items}}|{{dropzone.items}}/gi, function (matched) {\n      return variables[matched]\n    })\n\n    return template\n  }\n}"]}