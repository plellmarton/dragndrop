{"version":3,"sources":["dragndrop.js"],"names":["DragNDrop","Container","options","this","Repository","DropZone","data","init","prototype","repository","dropzone","update","querySelectorAll","events","renderItem","index","template","variables","{{index}}","{{img.id}}","id","{{img.src}}","url","{{img.name}}","name","replace","matched","output","render","innerHTML","addEventListener","e","item","target","moveFrom","path","getAttribute","dataIndex","parseInt","dataTransfer","setData","JSON","stringify","bind","getData","parse","itemIndex","undefined","push","splice","console","log","preventDefault","{{repository.items}}","map","toString","{{dropzone.items}}"],"mappings":"AAAA,SAASA,UAAUC,EAAWC,GAC5BC,KAAKF,UACLE,KAAKC,WACLD,KAAKE,SACLF,KAAKG,KACLH,KAAKI,KAAKN,EAAWC,GAGvBF,UAAUQ,UAAY,CACpBD,KAAM,SAAUN,EAAWC,GACzBC,KAAKF,UAAYA,EACjBE,KAAKG,KAAO,CACVG,WAAYP,EAAQO,WACpBC,SAAU,IAEZP,KAAKQ,SACLR,KAAKC,WAAaD,KAAKF,UAAUW,iBAAiB,2BAA2B,GAC7ET,KAAKE,SAAWF,KAAKF,UAAUW,iBAAiB,yBAAyB,GACzET,KAAKU,UAGPC,WAAY,SAAUR,EAAMS,GAC1B,IAAIC,EAAW,uPAKXC,EAAY,CACdC,YAAaH,EACbI,aAAcb,EAAKc,GACnBC,cAAef,EAAKgB,IACpBC,eAAgBjB,EAAKkB,MAOvB,OAJAR,EAAWA,EAASS,QAAQ,kDAAmD,SAAUC,GACvF,OAAOT,EAAUS,MAMrBf,OAAQ,WACN,IAAIgB,EAASxB,KAAKyB,SAClBzB,KAAKF,UAAU4B,UAAYF,GAG7Bd,OAAQ,WACNV,KAAKF,UAAU6B,iBAAiB,YAAa,SAAUC,GACrD,IAAIC,EAAOD,EAAEE,OACTC,EAAWH,EAAEI,KAAK,GAAGC,aAAa,YAClCC,EAAYC,SAASN,EAAKI,aAAa,eAE3CL,EAAEQ,aAAaC,QAAQ,WAAYN,GACnCH,EAAEQ,aAAaC,QAAQ,OAAQC,KAAKC,UAAUvC,KAAKG,KAAK4B,GAAUG,KAClEN,EAAEQ,aAAaC,QAAQ,YAAaH,IACpCM,KAAKxC,OAEPA,KAAKF,UAAU6B,iBAAiB,OAAQ,SAAUC,GAChD,IAAIG,EAAWH,EAAEQ,aAAaK,QAAQ,YAClCZ,EAAOS,KAAKI,MAAMd,EAAEQ,aAAaK,QAAQ,SACzCE,EAAYf,EAAEQ,aAAaK,QAAQ,aACnCX,EAASF,EAAEE,OAAOG,aAAa,YAEnC,GAAIF,IAAaD,EAAQ,CACvB,IAAI3B,EAAOH,KAAKG,UACKyC,IAAjBzC,EAAK2B,KACP3B,EAAK2B,GAAU,IAEjB3B,EAAK2B,GAAQe,KAAKhB,GAClB1B,EAAK4B,GAAUe,OAAOX,SAASQ,GAAY,GAC3CI,QAAQC,IAAIb,SAASQ,IACrB3C,KAAKG,KAAOA,EAEdH,KAAKQ,UACLgC,KAAKxC,OAEPA,KAAKF,UAAU6B,iBAAiB,WAAY,SAAUC,GACpD,IAAIE,EAASF,EAAEE,OAAOG,aAAa,YACrB,aAAXH,EACDF,EAAEqB,iBACkB,eAAXnB,GACTF,EAAEqB,kBAEJT,KAAKxC,QAGTyB,OAAQ,WACN,IAAIZ,EAAW,mKAGXC,EAAY,CACdoC,uBAAwBlD,KAAKG,KAAKG,WAAW6C,IAAI,SAAUtB,EAAMjB,GAC/D,OAAOZ,KAAKW,WAAWkB,EAAMjB,IAC7B4B,KAAKxC,OAAOoD,WAAW9B,QAAQ,MAAO,IACxC+B,0BAA6CT,IAAvB5C,KAAKG,KAAKI,SAAyBP,KAAKG,KAAKI,SAAS4C,IAAI,SAAUtB,EAAMjB,GAC9F,OAAOZ,KAAKW,WAAWkB,EAAMjB,IAC7B4B,KAAKxC,OAAOoD,WAAW9B,QAAQ,MAAO,IAAM,IAOhD,OAJAT,EAAWA,EAASS,QAAQ,4CAA6C,SAAUC,GACjF,OAAOT,EAAUS","file":"../dragndrop.min.js","sourcesContent":["function DragNDrop(Container, options) {\n  this.Container\n  this.Repository\n  this.DropZone\n  this.data\n  this.init(Container, options)\n}\n\nDragNDrop.prototype = {\n  init: function (Container, options) {\n    this.Container = Container\n    this.data = {\n      repository: options.repository,\n      dropzone: []\n    }\n    this.update()\n    this.Repository = this.Container.querySelectorAll('[data-ref=\"repository\"]')[0]\n    this.DropZone = this.Container.querySelectorAll('[data-ref=\"dropzone\"]')[0]\n    this.events()\n  },\n\n  renderItem: function (data, index) {\n    var template = '<div class=\"dragndrop__item\" draggable=\"true\" data-ref=\"item\" data-id=\"{{img.id}}\" data-index=\"{{index}}\">' +\n      '<img src=\"{{img.src}}\" alt=\"{{img.name}}\" draggable=\"false\">' +\n      '<span class=\"dragndrop__item-name\" draggable=\"false\">{{img.name}}</span>' +\n      '</div>'\n\n    var variables = {\n      '{{index}}': index,\n      '{{img.id}}': data.id,\n      '{{img.src}}': data.url,\n      '{{img.name}}': data.name\n    }\n\n    template = template.replace(/{{img.src}}|{{img.name}}|{{img.id}}|{{index}}/gi, function (matched) {\n      return variables[matched]\n    })\n\n    return template\n  },\n\n  update: function () {\n    var output = this.render()\n    this.Container.innerHTML = output\n  },\n\n  events: function () {\n    this.Container.addEventListener('dragstart', function (e) {\n      var item = e.target\n      var moveFrom = e.path[1].getAttribute('data-ref')\n      var dataIndex = parseInt(item.getAttribute('data-index'))\n\n      e.dataTransfer.setData('moveFrom', moveFrom)\n      e.dataTransfer.setData('item', JSON.stringify(this.data[moveFrom][dataIndex]))\n      e.dataTransfer.setData('itemIndex', dataIndex)\n    }.bind(this))\n\n    this.Container.addEventListener('drop', function (e) {\n      var moveFrom = e.dataTransfer.getData('moveFrom')\n      var item = JSON.parse(e.dataTransfer.getData('item'))\n      var itemIndex = e.dataTransfer.getData('itemIndex')\n      var target = e.target.getAttribute('data-ref')\n\n      if (moveFrom !== target) {\n        var data = this.data\n        if (data[target] === undefined) {\n          data[target] = []\n        }\n        data[target].push(item)\n        data[moveFrom].splice(parseInt(itemIndex), 1)\n        console.log(parseInt(itemIndex))\n        this.data = data\n      }\n      this.update()\n    }.bind(this))\n\n    this.Container.addEventListener('dragover', function (e) {\n      var target = e.target.getAttribute('data-ref')\n      if(target === 'dropzone') {\n        e.preventDefault()\n      } else if (target === 'repository') {\n        e.preventDefault()\n      }\n    }.bind(this))\n  },\n\n  render: function () {\n    var template = '<div class=\"dragndrop__repository\" data-ref=\"repository\">{{repository.items}}</div>' +\n      '<div class=\"dragndrop__dropzone\" data-ref=\"dropzone\">{{dropzone.items}}</div>'\n\n    var variables = {\n      '{{repository.items}}': this.data.repository.map(function (item, index) {\n        return this.renderItem(item, index)\n      }.bind(this)).toString().replace(/,/gi, ''),\n      '{{dropzone.items}}': this.data.dropzone !== undefined ? this.data.dropzone.map(function (item, index) {\n        return this.renderItem(item, index)\n      }.bind(this)).toString().replace(/,/gi, '') : ''\n    }\n\n    template = template.replace(/{{repository.items}}|{{dropzone.items}}/gi, function (matched) {\n      return variables[matched]\n    })\n\n    return template\n  }\n}"]}